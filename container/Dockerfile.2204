# Copyright (c) 2020-2021 Intel Corporation.
# SPDX-License-Identifier: BSD-3-Clause

# use Ubuntu 22.04 with Intel IPP 
FROM intel/oneapi-basekit:2023.2-devel-ubuntu22.04 as build

RUN mkdir /opt/build
ARG PREFIX=/opt/build
#ARG LD_LIBRARY_PATH="/opt/build/lib:/opt/build/lib64"
ARG LD_LIBRARY_PATH="/opt/build/lib:/opt/build/lib64:/opt/intel/oneapi/ipp/2021.9.0/lib/intel64:/opt/intel/oneapi/compiler/2023.2.0/linux/compiler/lib/intel64_lin"
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Update apt and install dependances
RUN rm /etc/apt/sources.list.d/oneAPI.list && \
apt-get update && apt-get install  -y \
libx264-dev \
zlib1g-dev \
nasm \
cmake

COPY . ${PREFIX}/Video-Super-Resolution-Library
RUN cd ${PREFIX}/Video-Super-Resolution-Library && \
	./build.sh

WORKDIR /opt/build
RUN git config --global user.email "you@example.com"
RUN git clone https://github.com/FFmpeg/FFmpeg ffmpeg
WORKDIR /opt/build/ffmpeg
RUN git checkout -b n6.0 n6.0 && \
	cp /opt/build/Video-Super-Resolution-Library/ffmpeg/*.patch . && \
	cp /opt/build/Video-Super-Resolution-Library/ffmpeg/vf_raisr*.c ./libavfilter && \
        git am *.patch

# Configure and build ffmpeg
RUN ./configure \
--enable-libipp \
--extra-cflags=-fopenmp \
--extra-ldflags=-fopenmp \
--enable-gpl \
--enable-libx264 \
--extra-libs='-lraisr -lstdc++ -lippcore -lippvm -lipps -lippi -lm -lintlc -lsvml' \ 
--enable-cross-compile \
--prefix="${PREFIX}"  && \
make clean && make -j $(nproc) && \
make install

# cleanup
WORKDIR /opt/build
RUN \
ldd ${PREFIX}/bin/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib/ && \
        cp /opt/intel/oneapi/ipp/latest/lib/intel64/libippik0.so.10.8 /usr/local/lib && \
        cp /opt/intel/oneapi/ipp/latest/lib/intel64/libippsk0.so.10.8 /usr/local/lib && \
        cp /opt/intel/oneapi/ipp/latest/lib/intel64/libippsn0.so.10.8 /usr/local/lib && \
        cp /opt/intel/oneapi/ipp/latest/lib/intel64/libippsl9.so.10.8 /usr/local/lib && \
        cp /opt/intel/oneapi/ipp/latest/lib/intel64/libippse9.so.10.8 /usr/local/lib && \
        cp /opt/intel/oneapi/ipp/latest/lib/intel64/libippsy8.so.10.8 /usr/local/lib && \
        cp /opt/intel/oneapi/ipp/latest/lib/intel64/libippsn8.so.10.8 /usr/local/lib && \
        cp /opt/intel/oneapi/ipp/latest/lib/intel64/libippsm7.so.10.8 /usr/local/lib && \
        cp -r ${PREFIX}/bin/* /usr/local/bin/ && \
        cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ && \
        LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf && \
        cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include && \
        mkdir -p /usr/local/lib/pkgconfig && \
        for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do \
          sed "s:${PREFIX}:/usr/local:g" <"$pc" >/usr/local/lib/pkgconfig/"${pc##*/}"; \
        done

# Copy the raisr filters from the raisr library
RUN mkdir /raisrfolder
RUN mkdir /raisrfolder/files
RUN cp -r /opt/build/Video-Super-Resolution-Library/filters* /raisrfolder

FROM ubuntu:22.04 AS base

ENV   LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64

RUN mkdir /raisrfolder
COPY --from=build /usr/local /usr/local/
COPY --from=build /raisrfolder /raisrfolder

RUN ln -s /usr/local/bin/ffmpeg /raisrfolder/ffmpeg



# AWS CLI

COPY ./aws/  ./aws
RUN ./aws/install
RUN rm -r aws

RUN \
cp -r /usr/local/aws-cli/v2/current/dist/awscli/botocore/data /usr/local/aws-cli/v2/current/dist/awscli/botocore/data2 && \
        cd /usr/local/aws-cli/v2/current/dist/awscli/botocore/data && \
        rm -rf * && \
        cp -r ../data2/s3 . &&  \
        cp -r ../data2/opsworkscm/ . && \
        cp -r ../data2/config/ . && \
        cp -r ../data2/codedeploy/ . && \
        cp ../data2/partitions.json . && \
        cp ../data2/endpoints.json  . && \
        cd .. && \
        rm -rf /usr/local/aws-cli/v2/current/dist/awscli/botocore/data2 && \
        rm -rf /usr/local/aws-cli/v2/current/dist/awscli/examples/ && \
        rm -rf /usr/local/aws-cli/v2/current/dist/awscli/topics/ 

RUN aws s3 ls

# Script
WORKDIR /raisrfolder
COPY  ./main.sh .
RUN chmod +x main.sh


# Validate FFMPEG

WORKDIR /raisrfolder

# Run ffmpeg and verify that the raisr filter is supported
RUN ffmpeg -h filter=raisr



